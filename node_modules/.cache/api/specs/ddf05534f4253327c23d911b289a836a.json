{
  "openapi": "3.1.0",
  "info": {
    "title": "Faturas",
    "version": "unknown"
  },
  "servers": [
    {
      "url": "https://api.iugu.com/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "sec0": {
        "type": "apiKey",
        "in": "query",
        "name": "api_token"
      }
    }
  },
  "security": [
    {
      "sec0": []
    }
  ],
  "paths": {
    "/invoices": {
      "post": {
        "summary": "Criar Fatura",
        "description": "Cria uma fatura para um cliente. [Para mais informações sobre fatura](https://dev.iugu.com/docs/diferen%C3%A7a-entre-cobran%C3%A7a-direta-e-fatura)",
        "operationId": "criar-fatura",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "due_date",
                  "items"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "E-mail do cliente"
                  },
                  "cc_emails": {
                    "type": "string",
                    "description": "Endereços de E-mail para cópia separados por vírgula."
                  },
                  "due_date": {
                    "type": "string",
                    "description": "Data do vencimento. (Formato: 'AAAA-MM-DD').",
                    "format": "date"
                  },
                  "ensure_workday_due_date": {
                    "type": "boolean",
                    "description": "Se `true`, garante que a data de vencimento seja apenas em dias de semana, e não em sábados ou domingos.",
                    "default": false
                  },
                  "expires_in": {
                    "type": "string",
                    "description": "Expira uma fatura e impossibilita o seu pagamento depois *'x'* dias após o *vencimento*. Valor enviado precisa estar entre *0* e *30*. Se for enviado \"0\", a fatura ficará disponível para ser paga até às **23:59:59** do dia de vencimento."
                  },
                  "bank_slip_extra_due": {
                    "type": "string",
                    "description": "Prazo máximo para pagamento do boleto após o vencimento. O prazo máximo para pagamento deve ser entre *\"1\"* e *\"30\"* dias após a data de vencimento."
                  },
                  "items": {
                    "type": "array",
                    "description": "Itens da fatura. \"price_cents\" valor mínimo 100.  <b> Limite de 30 items </b>",
                    "items": {
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Descrição do item"
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "Quantidade do item",
                          "format": "int32"
                        },
                        "price_cents": {
                          "type": "integer",
                          "description": "Preço do item em centavos. Valor mínimo 100.",
                          "format": "int32"
                        }
                      },
                      "required": [
                        "description"
                      ],
                      "type": "object"
                    }
                  },
                  "return_url": {
                    "type": "string",
                    "description": "Cliente é redirecionado para essa URL após efetuar o pagamento da Fatura pela página de Fatura da Iugu"
                  },
                  "expired_url": {
                    "type": "string",
                    "description": "Cliente é redirecionado para essa URL se a Fatura que estiver acessando estiver expirada"
                  },
                  "notification_url": {
                    "type": "string",
                    "description": "URL chamada para todas as notificações de Fatura, assim como os webhooks (Gatilhos) são chamados"
                  },
                  "ignore_canceled_email": {
                    "type": "boolean",
                    "description": "Desliga o e-mail de cancelamento de fatura"
                  },
                  "fines": {
                    "type": "boolean",
                    "description": "Booleano para Habilitar ou Desabilitar multa por atraso de pagamento"
                  },
                  "late_payment_fine": {
                    "type": "integer",
                    "description": "Determine a multa % a ser cobrada para pagamentos efetuados após a data de vencimento",
                    "format": "int32"
                  },
                  "late_payment_fine_cents": {
                    "type": "integer",
                    "description": "Determine a multa por valor fixo a ser cobrada para pagamentos efetuados após a data de vencimento",
                    "format": "int32"
                  },
                  "per_day_interest": {
                    "type": "boolean",
                    "description": "Booleano que determina se cobra ou não juros por dia de atraso. 1% ao mês pro rata. Necessário passar a multa como true"
                  },
                  "per_day_interest_value": {
                    "type": "integer",
                    "description": "Informar o valor percentual de juros que deseja cobrar",
                    "format": "int32"
                  },
                  "per_day_interest_cents": {
                    "type": "integer",
                    "description": "Juros a ser cobrado por dia em centavos. Tem prioridade sobre per_day_interest_value. O juros somado em 30 dias deve ser inferior a 50% do valor da fatura.",
                    "format": "int32"
                  },
                  "discount_cents": {
                    "type": "integer",
                    "description": "Valor dos Descontos em centavos",
                    "format": "int32"
                  },
                  "customer_id": {
                    "type": "string",
                    "description": "ID do Cliente"
                  },
                  "ignore_due_email": {
                    "type": "boolean",
                    "description": "Booleano que ignora o envio do e-mail de cobrança"
                  },
                  "subscription_id": {
                    "type": "string",
                    "description": "Amarra esta Fatura com a Assinatura especificada. Esta fatura não causa alterações na assinatura vinculada."
                  },
                  "payable_with": {
                    "type": "array",
                    "description": "Método de pagamento que será disponibilizado para esta Fatura (\"all\", \"credit_card\", \"bank_slip\" ou \"pix\"). Obs: Caso esta Fatura esteja atrelada à uma Assinatura, a prioridade é herdar o valor atribuído na Assinatura; caso esta esteja atribuído o valor 'all', o sistema considerará o 'payable_with' da Fatura; se não, o sistema considerará o 'payable_with' da Assinatura.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "credits": {
                    "type": "integer",
                    "description": "Caso tenha o 'subscription_id', pode-se enviar o número de créditos a adicionar nessa Assinatura baseada em créditos, quando a Fatura for paga.",
                    "format": "int32"
                  },
                  "custom_variables": {
                    "type": "array",
                    "description": "Variáveis Personalizadas",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Nome da Variável. **Limitado à 255 caracteres**."
                        },
                        "value": {
                          "type": "string",
                          "description": "Valor da Variável.  **Limitado à 255 caracteres**."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "early_payment_discount": {
                    "type": "boolean",
                    "description": "Ativa ou desativa os descontos por pagamento antecipado. Quando `true`, sobrepõe as configurações de desconto da conta."
                  },
                  "early_payment_discounts": {
                    "type": "array",
                    "description": "Quantidade de dias de antecedência para o pagamento receber o desconto (Se enviado, substituirá a configuração atual da conta)",
                    "items": {
                      "properties": {
                        "days": {
                          "type": "integer",
                          "description": "Número de dias antes do vencimento para aplicação do desconto.",
                          "format": "int32"
                        },
                        "percent": {
                          "type": "number",
                          "description": "Valor do desconto em porcentagem. Não pode ser usado com `value_cents`.",
                          "format": "float"
                        },
                        "value_cents": {
                          "type": "integer",
                          "description": "Valor do desconto em centavos. Não pode ser usado com `percent`.",
                          "format": "int32"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "*atenção*": {
                    "type": "object",
                    "description": "Informações do cliente abaixo \"payer\" são obrigatórias para a emissão de boletos ou necessárias para seu sistema de antifraude. Para emissão de <b>Pix</b> apenas o \"payer.name\" é obrigatório.",
                    "properties": {}
                  },
                  "payer": {
                    "properties": {
                      "cpf_cnpj": {
                        "type": "string",
                        "description": "CPF ou CNPJ do cliente (apenas números)"
                      },
                      "name": {
                        "type": "string",
                        "description": "Nome (utilizado como sacado no boleto)"
                      },
                      "phone_prefix": {
                        "type": "string",
                        "description": "Prefixo (DDD) do telefone em dois dígitos"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Telefone do cliente"
                      },
                      "email": {
                        "type": "string",
                        "description": "Email do cliente"
                      },
                      "address": {
                        "type": "object",
                        "description": "Endereço do cliente, conforme os parâmetros seguintes:",
                        "properties": {
                          "zip_code": {
                            "type": "string",
                            "description": "CEP"
                          },
                          "street": {
                            "type": "string",
                            "description": "Rua"
                          },
                          "number": {
                            "type": "string",
                            "description": "Número"
                          },
                          "district": {
                            "type": "string",
                            "description": "Bairro"
                          },
                          "city": {
                            "type": "string",
                            "description": "Cidade"
                          },
                          "state": {
                            "type": "string",
                            "description": "Estado (Ex: SP)"
                          },
                          "country": {
                            "type": "string",
                            "description": "País"
                          },
                          "complement": {
                            "type": "string",
                            "description": "Complemento"
                          }
                        }
                      }
                    },
                    "required": [],
                    "type": "object",
                    "description": "Informações do Cliente para o Anti Fraude ou Boleto. Dados são obrigatórios para emissão de boletos e Pix."
                  },
                  "order_id": {
                    "type": "string",
                    "description": "Número único que identifica o pedido de compra. Opcional, ajuda a evitar o pagamento da mesma fatura."
                  },
                  "*Commissions*": {
                    "type": "object",
                    "description": "<b style=\"color: red;\">Depreciado e será removido. Utilizar Splits no lugar</b>",
                    "properties": {}
                  },
                  "commissions": {
                    "properties": {
                      "cents": {
                        "type": "integer",
                        "description": "Valor em centavos",
                        "format": "int32"
                      },
                      "percent": {
                        "type": "number",
                        "description": "Valor em porcentagem.",
                        "format": "float"
                      },
                      "credit_card_cents": {
                        "type": "integer",
                        "description": "Valor em centavos a ser cobrado apenas em transações no cartão de crédito. Precisa do parâmetro `cents` acima configurado.",
                        "format": "int32"
                      },
                      "credit_card_percent": {
                        "type": "number",
                        "description": "Valor em porcentagem a ser cobrado apenas em transações no cartão de crédito. Precisa do parâmetro `percent` acima configurado.",
                        "format": "float"
                      },
                      "bank_slip_cents": {
                        "type": "integer",
                        "description": "Valor em centavos a ser cobrado apenas em transações no boleto. Precisa do parâmetro `cents` acima configurado.",
                        "format": "int32"
                      },
                      "bank_slip_percent": {
                        "type": "number",
                        "description": "Valor em porcentagem a ser cobrado apenas em transações no boleto. Precisa do parâmetro `percent` acima configurado.",
                        "format": "float"
                      },
                      "pix_cents": {
                        "type": "integer",
                        "description": "Valor em centavos a ser cobrado apenas em transações via Pix. Precisa do parâmetro `cents` acima configurado.",
                        "format": "int32"
                      },
                      "pix_percent": {
                        "type": "number",
                        "description": "Valor em porcentagem a ser cobrado apenas em transações via Pix. Precisa do parâmetro `percent` acima configurado.",
                        "format": "float"
                      },
                      "permit_aggregated": {
                        "type": "boolean",
                        "description": "Permite agregar comissionamento percentual e fixo"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "external_reference": {
                    "type": "string",
                    "description": "Informação de referência externa, possibilitando a realização de pesquisa."
                  },
                  "max_installments_value": {
                    "type": "integer",
                    "description": "Limita um valor máximo de parcelas. Caso não for enviado, pegará o padrão configurado na conta.",
                    "format": "int32"
                  },
                  "splits": {
                    "type": "array",
                    "description": "Lista de splits a serém aplicado nas faturas pagas. [Para mais informações sobre com funciona o split por fatura](https://dev.iugu.com/docs/split-por-fatura-no-cart%C3%A3o-de-cr%C3%A9dito-por-api)",
                    "items": {
                      "properties": {
                        "recipient_account_id": {
                          "type": "string",
                          "description": "ID Da conta que irá receber o split"
                        },
                        "cents": {
                          "type": "integer",
                          "description": "Centavos a serem cobrados da fatura",
                          "format": "int32"
                        },
                        "percent": {
                          "type": "number",
                          "description": "Porcentagem a ser cobrada da fatura",
                          "format": "float"
                        },
                        "bank_slip_cents": {
                          "type": "integer",
                          "description": "Valor em centavos a ser cobrado apenas em transações no boleto.",
                          "format": "int32"
                        },
                        "bank_slip_percent": {
                          "type": "number",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações no boleto.",
                          "format": "float"
                        },
                        "credit_card_cents": {
                          "type": "integer",
                          "description": "Valor em centavos a ser cobrado apenas em transações no cartão de crédito.",
                          "format": "int32"
                        },
                        "credit_card_percent": {
                          "type": "number",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações no cartão de crédito.",
                          "format": "float"
                        },
                        "pix_cents": {
                          "type": "integer",
                          "description": "Valor em centavos a ser cobrado apenas em transações no pix.",
                          "format": "int32"
                        },
                        "pix_percent": {
                          "type": "number",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações no pix.",
                          "format": "float"
                        },
                        "permit_aggregated": {
                          "type": "boolean",
                          "description": "Permite agregar comissionamento percentual + fixo."
                        },
                        "credit_card_1x_cents": {
                          "type": "string",
                          "description": "Valor em centavos a ser cobrado apenas em transações em 1x no cartão de crédito."
                        },
                        "credit_card_2x_cents": {
                          "type": "string",
                          "description": "Valor em centavos a ser cobrado apenas em transações em 2x no cartão de crédito."
                        },
                        "credit_card_3x_cents": {
                          "type": "string",
                          "description": "Valor em centavos a ser cobrado apenas em transações em 3x no cartão de crédito."
                        },
                        "credit_card_4x_cents": {
                          "type": "string",
                          "description": "Valor em centavos a ser cobrado apenas em transações em 4x no cartão de crédito."
                        },
                        "credit_card_5x_cents": {
                          "type": "string",
                          "description": "Valor em centavos a ser cobrado apenas em transações em 5x no cartão de crédito."
                        },
                        "credit_card_6x_cents": {
                          "type": "string",
                          "description": "Valor em centavos a ser cobrado apenas em transações em 6x no cartão de crédito."
                        },
                        "credit_card_7x_cents": {
                          "type": "string",
                          "description": "Valor em centavos a ser cobrado apenas em transações em 7x no cartão de crédito."
                        },
                        "credit_card_8x_cents": {
                          "type": "string",
                          "description": "Valor em centavos a ser cobrado apenas em transações em 8x no cartão de crédito."
                        },
                        "credit_card_9x_cents": {
                          "type": "string",
                          "description": "Valor em centavos a ser cobrado apenas em transações em 9x no cartão de crédito."
                        },
                        "credit_card_10x_cents": {
                          "type": "string",
                          "description": "Valor em centavos a ser cobrado apenas em transações em 10x no cartão de crédito."
                        },
                        "credit_card_11x_cents": {
                          "type": "string",
                          "description": "Valor em centavos a ser cobrado apenas em transações em 11x no cartão de crédito."
                        },
                        "credit_card_12x_cents": {
                          "type": "string",
                          "description": "Valor em centavos a ser cobrado apenas em transações em 12x no cartão de crédito."
                        },
                        "credit_card_1x_percent": {
                          "type": "string",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações em 1x no cartão de crédito."
                        },
                        "credit_card_2x_percent": {
                          "type": "string",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações em 2x no cartão de crédito."
                        },
                        "credit_card_3x_percent": {
                          "type": "string",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações em 3x no cartão de crédito."
                        },
                        "credit_card_4x_percent": {
                          "type": "string",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações em 4x no cartão de crédito."
                        },
                        "credit_card_5x_percent": {
                          "type": "string",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações em 5x no cartão de crédito."
                        },
                        "credit_card_6x_percent": {
                          "type": "string",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações em 6x no cartão de crédito."
                        },
                        "credit_card_7x_percent": {
                          "type": "string",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações em 7x no cartão de crédito."
                        },
                        "credit_card_8x_percent": {
                          "type": "string",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações em 8x no cartão de crédito."
                        },
                        "credit_card_9x_percent": {
                          "type": "string",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações em 9x no cartão de crédito."
                        },
                        "credit_card_10x_percent": {
                          "type": "string",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações em 10x no cartão de crédito."
                        },
                        "credit_card_11x_percent": {
                          "type": "string",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações em 11x no cartão de crédito."
                        },
                        "credit_card_12x_percent": {
                          "type": "string",
                          "description": "Valor em porcentagem a ser cobrado apenas em transações em 12x no cartão de crédito."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "RAW_BODY": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "description": "Senha para o cliente final abrir a fatura."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  “id”: “0BA7928122F647BF829EE33AB970F69B”,\n  “due_date”: “2023-04-18\",\n  “currency”: “BRL”,\n  “discount_cents”: 0,\n  “email”: “test@iugu.com”,\n  “items_total_cents”: 295635,\n  “notification_url”: null,\n  “return_url”: null,\n  “status”: “pending”,\n  “tax_cents”: 0,\n  “total_cents”: 295635,\n  “total_paid_cents”: 0,\n  “taxes_paid_cents”: null,\n  “paid_at”: null,\n  “paid_cents”: null,\n  “cc_emails”: null,\n  “financial_return_date”: null,\n  “payable_with”: “all”,\n  “overpaid_cents”: null,\n  “ignore_due_email”: true,\n  “ignore_canceled_email”: true,\n  “advance_fee_cents”: null,\n  “commission_cents”: null,\n  “early_payment_discount”: false,\n  “order_id”: null,\n  “updated_at”: “2023-03-27T18:07:20-03:00”,\n  “credit_card_brand”: null,\n  “credit_card_bin”: null,\n  “credit_card_last_4\": null,\n  “credit_card_captured_at”: null,\n  “credit_card_tid”: null,\n  “external_reference”: null,\n  “max_installments_value”: null,\n  “payer_name”: “Teste “,\n  “payer_email”: null,\n  “payer_cpf_cnpj”: “42231746816”,\n  “payer_phone”: “42231111”,\n  “payer_phone_prefix”: “18”,\n  “payer_address_zip_code”: “16201005”,\n  “payer_address_street”: “Rua Guarani”,\n  “payer_address_district”: “Patrimônio Silvares”,\n  “payer_address_city”: “Birigüi”,\n  “payer_address_state”: “SP”,\n  “payer_address_number”: “N/A”,\n  “payer_address_complement”: null,\n  “payer_address_country”: “Brasil”,\n  “late_payment_fine”: null,\n  “late_payment_fine_cents”: 7420,\n  “split_id”: null,\n  “external_payment_id”: null,\n  “external_payment_description”: null,\n  “account_id”: “F3C702ABD4FF4E3AB6458F90D1E7FF9E”,\n  “bank_account_branch”: “0001”,\n  “bank_account_number”: “4244827-0”,\n  “account_name”: “teste”,\n  “secure_id”: “0ba79281-22f6-47bf-829e-e33ab970f69b-34fa”,\n  “secure_url”: “https://faturas.iugu.com/0ba79281-22f6-47bf-829e-e33ab970f69b-34fa”,\n  “customer_id”: null,\n  “customer_ref”: null,\n  “customer_name”: null,\n  “user_id”: null,\n  “total”: “R$ 2.956,35”,\n  “taxes_paid”: “R$ 0,00”,\n  “total_paid”: “R$ 0,00”,\n  “total_overpaid”: “R$ 0,00”,\n  “total_refunded”: “R$ 0,00”,\n  “commission”: “R$ 0,00”,\n  “fines_on_occurrence_day”: “R$ 0,00”,\n  “total_on_occurrence_day”: “R$ 0,00”,\n  “fines_on_occurrence_day_cents”: 0,\n  “total_on_occurrence_day_cents”: 0,\n  “refunded_cents”: 0,\n  “remaining_captured_cents”: 0,\n  “advance_fee”: null,\n  “estimated_advance_fee”: null,\n  “paid”: “R$ 0,00”,\n  “original_payment_id”: null,\n  “double_payment_id”: null,\n  “per_day_interest”: true,\n  “per_day_interest_value”: null,\n  “per_day_interest_cents”: 98,\n  “interest”: null,\n  “discount”: null,\n  “duplicated_invoice_id”: null,\n  “bank_slip_extra_due”: 0,\n  “created_at”: “27/03, 18:07\",\n  “created_at_iso”: “2023-03-27T18:07:20-03:00\",\n  “authorized_at”: null,\n  “authorized_at_iso”: null,\n  “expired_at”: null,\n  “expired_at_iso”: null,\n  “refunded_at”: null,\n  “refunded_at_iso”: null,\n  “canceled_at”: null,\n  “canceled_at_iso”: null,\n  “protested_at”: null,\n  “protested_at_iso”: null,\n  “chargeback_at”: null,\n  “chargeback_at_iso”: null,\n  “occurrence_date”: null,\n  “refundable”: null,\n  “installments”: null,\n  “transaction_number”: 96461618,\n  “payment_method”: null,\n  “financial_return_dates”: null,\n  “bank_slip”: {\n      “digitable_line”: “40192023008600000000900000542472493240000295635”,\n      “barcode_data”: “40194932400002956352023086000000000000054247”,\n      “barcode”: “https://api.iugu.com/v1/public/invoice/0ba79281-22f6-47bf-829e-e33ab970f69b-34fa/barcode”,\n      “bank_slip_bank”: 401,\n      “bank_slip_status”: “pending”,\n      “bank_slip_error_code”: “00\",\n      “bank_slip_error_message”: null\n  },\n  “pix”: {\n      “qrcode”: “https://qr.iugu.com/public/v1/qr_codes/image/0BA7928122F647BF829EE33AB970F69B”,\n      “qrcode_text”: “00020101021226880014br.gov.bcb.pix2566qr.iugu.com/public/payload/v2/61a0461a-2604-4ea9-b25c-3166206329e752040000530398654072956.355802BR5925DANILO VICTOR DE SOUSA VE6009SAO PAULO62070503***630463FC”,\n      “status”: “qr_code_created”,\n      “payer_cpf_cnpj”: null,\n      “payer_name”: null,\n      “end_to_end_id”: null,\n      “end_to_end_refund_id”: null\n  },\n  “items”: [\n      {\n          “id”: “7C223633D2A04DDCB031F9168776BF8D”,\n          “description”: “Teste”,\n          “price_cents”: 295635,\n          “quantity”: 1,\n          “created_at”: “2023-03-27T18:07:20-03:00”,\n          “updated_at”: “2023-03-27T18:07:20-03:00”,\n          “price”: “R$ 2.956,35”\n      }\n  ],\n  “early_payment_discounts”: [],\n  “split_rules”: null,\n  “variables”: [\n      {\n          “variable”: “expires_in”,\n          “value”: “10\"\n      },\n      {\n          “variable”: “payer.address.city”,\n          “value”: “Birigüi”\n      },\n      {\n          “variable”: “payer.address.city”,\n          “value”: “Birigüi”\n      },\n      {\n          “variable”: “payer.address.country”,\n          “value”: “Brasil”\n      },\n      {\n          “variable”: “payer.address.country”,\n          “value”: “Brasil”\n      },\n      {\n          “variable”: “payer.address.district”,\n          “value”: “Patrimônio Silvares”\n      },\n      {\n          “variable”: “payer.address.district”,\n          “value”: “Patrimônio Silvares”\n      },\n      {\n          “variable”: “payer.address.number”,\n          “value”: “N/A”\n      },\n      {\n          “variable”: “payer.address.number”,\n          “value”: “N/A”\n      },\n      {\n          “variable”: “payer.address.state”,\n          “value”: “SP”\n      },\n      {\n          “variable”: “payer.address.state”,\n          “value”: “SP”\n      },\n      {\n          “variable”: “payer.address.street”,\n          “value”: “Rua Guarani”\n      },\n      {\n          “variable”: “payer.address.street”,\n          “value”: “Rua Guarani”\n      },\n      {\n          “variable”: “payer.address.zip_code”,\n          “value”: “16201005\"\n      },\n      {\n          “variable”: “payer.address.zip_code”,\n          “value”: “16201005\"\n      },\n      {\n          “variable”: “payer.cpf_cnpj”,\n          “value”: “42231746816\"\n      },\n      {\n          “variable”: “payer.cpf_cnpj”,\n          “value”: “42231746816\"\n      },\n      {\n          “variable”: “payer.name”,\n          “value”: “Teste ”\n      },\n      {\n          “variable”: “payer.name”,\n          “value”: “Teste ”\n      },\n      {\n          “variable”: “payer.phone”,\n          “value”: “42231111\"\n      },\n      {\n          “variable”: “payer.phone”,\n          “value”: “42231111\"\n      },\n      {\n          “variable”: “payer.phone_prefix”,\n          “value”: “18\"\n      },\n      {\n          “variable”: “payer.phone_prefix”,\n          “value”: “18\"\n      },\n      {\n          “variable”: “payment_data.transaction_number”,\n          “value”: “96461618\"\n      },\n      {\n          “variable”: “payment_data.transaction_number”,\n          “value”: “96461618\"\n      }\n  ],\n  “custom_variables”: [],\n  “logs”: [\n      {\n          “id”: “79FD3891758F4A8CABE1EC137F4160D1\",\n          “description”: “Fatura criada com sucesso!“,\n          “notes”: “Fatura criada!“,\n          “created_at”: “27/03, 18:07\"\n      }\n  ],\n  “credit_card_transaction”: null"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    \"items deveria ser um Array\"\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "items deveria ser um Array"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Un.Entity": {
                    "value": "{\n  \"errors\": {\n    \"due_date\": [\n      \"não pode ficar em branco\",\n      \"não pode estar mais que três anos a frente\",\n      \"não pode estar no passado\"\n    ]\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "due_date": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "não pode ficar em branco"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Listar/Buscar Faturas",
        "description": "Retorna uma lista das faturas em sua conta ordenadas pela data de criação, da mais à menos recente. Por padrão, este endpoint retorna no máximo 100 registros. O campo \"totalItems\" contém sempre a quantidade total de faturas cadastradas, independentemente dos parâmetros de pesquisa utilizados, e o resultado da pesquisa fica sempre dentro de \"items\".",
        "operationId": "listar-faturas",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limita o número de registros retornados em até 100, que é o padrão de retorno desta chamada. Também utilizado em <a href=\"https://dev.iugu.com/v1.0/reference#paginação\">paginação</a>.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Quantos registros pular do início da pesquisa, usado para paginação.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "created_at_from",
            "in": "query",
            "description": "Registros criados a partir dessa data passada no parâmetro. Formato (AAAA-MM-DDThh:mm:ss-03:00)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "created_at_to",
            "in": "query",
            "description": "Registros criados até esta data passada no parâmetro. Formato (AAAA-MM-DDThh:mm:ss-03:00)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "paid_at_from",
            "in": "query",
            "description": "Registros pagos a partir dessa data passada no parâmetro. Formato (AAAA-MM-DDThh:mm:ss-03:00)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "paid_at_to",
            "in": "query",
            "description": "Registros pagos até esta data passada no parâmetro. Formato (AAAA-MM-DDThh:mm:ss-03:00)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "due_date",
            "in": "query",
            "description": "Data de Expiração (AAAA-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Neste parâmetro pode ser passado um texto para pesquisa como e-mail, nome, anotações e o order_id. Necessário usar a paginação (limit, start, etc)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Registros atualizados desde o momento passado no parâmetro. Formato (AAAA-MM-DDThh:mm:ss-03:00)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "customer_id",
            "in": "query",
            "description": "ID do Cliente",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status_filter",
            "in": "query",
            "description": "Usado para filtrar as faturas pelo status (pending, paid, canceled, partially_paid, externally_paid, refunded, expired, authorized)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"facets\": {\n        \"status\": {\n            \"_type\": \"terms\",\n            \"missing\": 0,\n            \"total\": 2,\n            \"other\": 0,\n            \"terms\": [\n                {\n                    \"term\": \"paid\",\n                    \"count\": 1\n                },\n                {\n                    \"term\": \"pending\",\n                    \"count\": 1\n                }\n            ]\n        }\n    },\n    \"totalItems\": 2,\n    \"items\": [\n        {\n            \"id\": \"E607FCCD119E45C59336DB78B54CF771\",\n            \"due_date\": \"2013-11-30\",\n            \"currency\": \"BRL\",\n            \"pix\": {\n                \"qrcode\": \"https://faturas.iugu.com/iugu_pix/159b70d4-8a7a-492b-bb28-8950d0e9450f-f652/test/qr_code\"\n    \t\t\t\t},\n            \"customer_id\": null,\n            \"discount_cents\": null,\n            \"email\": \"teste@teste.com\",\n            \"expiration_url\": null,\n            \"notification_url\": null,\n            \"return_url\": null,\n            \"status\": \"pending\",\n            \"tax_cents\": null,\n            \"updated_at\": \"2013-11-18T14:58:23-02:00\",\n            \"total_cents\": 1000,\n            \"commission_cents\": null,\n            \"secure_id\": \"e607fccd-119e-45c5-9336-db78b54cf771-314d\",\n            \"secure_url\": \"https://iugu.com/invoices/e607fccd-119e-45c5-9336-db78b54cf771-314d\",\n            \"user_id\": null,\n            \"commission\": \"R$ 0,00\",\n            \"total\": \"R$ 10,00\",\n            \"created_at\": \"18 Nov 14:58\",\n            \"items\": [\n                {\n                    \"id\": \"0E9E83C2E8B14AF0ADB2F5F6E97265AA\",\n                    \"description\": \"Item Um\",\n                    \"price_cents\": 1000,\n                    \"quantity\": 1,\n                    \"created_at\": \"2013-11-18T14:58:23-02:00\",\n                    \"updated_at\": \"2013-11-18T14:58:23-02:00\",\n                    \"price\": \"R$ 10,00\"\n                }\n            ],\n            \"variables\": [],\n            \"logs\": []\n        },\n        {\n            \"id\": \"F47FE578806747FE8FF71C1521934E81\",\n            \"due_date\": \"2013-10-24\",\n            \"currency\": \"BRL\",\n            \"pix\": null,\n            \"customer_id\": \"32ce45d8-b42b-4aee-a3d1-a1d9227e1790\",\n            \"discount_cents\": null,\n            \"email\": \"teste@gmail.com\",\n            \"expiration_url\": null,\n            \"notification_url\": null,\n            \"return_url\": null,\n            \"status\": \"paid\",\n            \"tax_cents\": null,\n            \"updated_at\": \"2013-10-24T14:21:26-02:00\",\n            \"total_cents\": 200,\n            \"commission_cents\": 0,\n            \"secure_id\": \"f47fe578-8067-47fe-8ff7-1c1521934e81-3280\",\n            \"secure_url\": \"https://iugu.com/invoices/f47fe578-8067-47fe-8ff7-1c1521934e81-3280\",\n            \"commission\": \"R$ 0,00\",\n            \"user_id\": null,\n            \"total\": \"R$ 2,00\",\n            \"created_at\": \"24 Oct 14:21\",\n            \"items\": [\n                {\n                    \"id\": \"FBDBAF5E259C492C98E6C2CB493777F7\",\n                    \"description\": \"Subscription Activation: plan1\",\n                    \"price_cents\": 200,\n                    \"quantity\": 1,\n                    \"created_at\": \"2013-10-24T14:21:26-02:00\",\n                    \"updated_at\": \"2013-10-24T14:21:26-02:00\",\n                    \"price\": \"R$ 2,00\"\n                }\n            ],\n            \"variables\": [],\n            \"logs\": []\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "facets": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "_type": {
                              "type": "string",
                              "example": "terms"
                            },
                            "missing": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "total": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "other": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "terms": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "term": {
                                    "type": "string",
                                    "example": "paid"
                                  },
                                  "count": {
                                    "type": "integer",
                                    "example": 1,
                                    "default": 0
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "totalItems": {
                      "type": "integer",
                      "example": 2,
                      "default": 0
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "E607FCCD119E45C59336DB78B54CF771"
                          },
                          "due_date": {
                            "type": "string",
                            "example": "2013-11-30"
                          },
                          "currency": {
                            "type": "string",
                            "example": "BRL"
                          },
                          "pix": {
                            "type": "object",
                            "properties": {
                              "qrcode": {
                                "type": "string",
                                "example": "https://faturas.iugu.com/iugu_pix/159b70d4-8a7a-492b-bb28-8950d0e9450f-f652/test/qr_code"
                              }
                            }
                          },
                          "customer_id": {},
                          "discount_cents": {},
                          "email": {
                            "type": "string",
                            "example": "teste@teste.com"
                          },
                          "expiration_url": {},
                          "notification_url": {},
                          "return_url": {},
                          "status": {
                            "type": "string",
                            "example": "pending"
                          },
                          "tax_cents": {},
                          "updated_at": {
                            "type": "string",
                            "example": "2013-11-18T14:58:23-02:00"
                          },
                          "total_cents": {
                            "type": "integer",
                            "example": 1000,
                            "default": 0
                          },
                          "commission_cents": {},
                          "secure_id": {
                            "type": "string",
                            "example": "e607fccd-119e-45c5-9336-db78b54cf771-314d"
                          },
                          "secure_url": {
                            "type": "string",
                            "example": "https://iugu.com/invoices/e607fccd-119e-45c5-9336-db78b54cf771-314d"
                          },
                          "user_id": {},
                          "commission": {
                            "type": "string",
                            "example": "R$ 0,00"
                          },
                          "total": {
                            "type": "string",
                            "example": "R$ 10,00"
                          },
                          "created_at": {
                            "type": "string",
                            "example": "18 Nov 14:58"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0E9E83C2E8B14AF0ADB2F5F6E97265AA"
                                },
                                "description": {
                                  "type": "string",
                                  "example": "Item Um"
                                },
                                "price_cents": {
                                  "type": "integer",
                                  "example": 1000,
                                  "default": 0
                                },
                                "quantity": {
                                  "type": "integer",
                                  "example": 1,
                                  "default": 0
                                },
                                "created_at": {
                                  "type": "string",
                                  "example": "2013-11-18T14:58:23-02:00"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "example": "2013-11-18T14:58:23-02:00"
                                },
                                "price": {
                                  "type": "string",
                                  "example": "R$ 10,00"
                                }
                              }
                            }
                          },
                          "variables": {
                            "type": "array"
                          },
                          "logs": {
                            "type": "array"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoices/{id}/duplicate": {
      "post": {
        "summary": "Gerar 2ª Via de Fatura",
        "description": "Gera a segunda via de uma fatura com o status \"pendente\". A fatura atual é cancelada e uma nova é criada com o mesmo status.",
        "operationId": "gerar-segunda-via",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da fatura",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "due_date"
                ],
                "properties": {
                  "due_date": {
                    "type": "string",
                    "description": "Nova data de vencimento no formato AAAA-MM-DD.",
                    "format": "date"
                  },
                  "items": {
                    "type": "array",
                    "description": "Adicione, altere ou remova itens da nova fatura. Para remover, envie \"id\" do subitem + \"_destroy=true\"",
                    "items": {
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Descrição do item."
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "Quantidade do item.",
                          "format": "int32"
                        },
                        "price_cents": {
                          "type": "integer",
                          "description": "Valor do item em centavos. Valor mínimo: 100.",
                          "format": "int32"
                        },
                        "id": {
                          "type": "string",
                          "description": "ID do item, utilizado só em casos de edição ou remoção."
                        },
                        "_destroy": {
                          "type": "boolean",
                          "description": "Caso `true`, remove o item de uma fatura. ID do item é obrigatório."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "ignore_due_email": {
                    "type": "boolean",
                    "description": "Ignora o envio do e-mail de cobrança da nova fatura."
                  },
                  "ignore_canceled_email": {
                    "type": "boolean",
                    "description": "Ignora o envio do e-mail de cancelamento da fatura atual."
                  },
                  "current_fines_option": {
                    "type": "boolean",
                    "description": "Caso `true`, aplica multas da fatura original à segunda via."
                  },
                  "keep_early_payment_discount": {
                    "type": "boolean",
                    "description": "Caso `true`, copia os descontos de pagamento antecipado da fatura original para a 2ª via."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"id\": \"856856F5ADA144F68DA6E5DBEF870434\",\n    \"due_date\": \"2015-12-30\",\n    \"currency\": \"BRL\",\n    \"discount_cents\": null,\n    \"email\": \"email@email.com\",\n    \"items_total_cents\": 6000,\n    \"notification_url\": null,\n    \"return_url\": null,\n    \"status\": \"pending\",\n    \"tax_cents\": null,\n    \"updated_at\": \"2015-11-26T10:41:19-02:00\",\n    \"total_cents\": 6000,\n    \"total_paid_cents\": 0,\n    \"paid_at\": null,\n    \"commission_cents\": null,\n    \"taxes_paid_cents\": null,\n    \"paid_cents\": null,\n    \"cc_emails\": null,\n    \"financial_return_date\": null,\n    \"payable_with\": \"all\",\n    \"overpaid_cents\": null,\n    \"ignore_due_email\": false,\n    \"ignore_canceled_email\": null,\n    \"secure_id\": \"856856f5-ada1-44f6-8da6-e5dbef870434-fe5d\",\n    \"secure_url\": \"https://iugu.com/invoices/856856f5-ada1-44f6-8da6-e5dbef870434-fe5d\",\n    \"customer_id\": null,\n    \"customer_ref\": null,\n    \"customer_name\": null,\n    \"user_id\": null,\n    \"total\": \"R$ 60,00\",\n    \"taxes_paid\": \"R$ 0,00\",\n    \"total_paid\": \"R$ 0,00\",\n    \"total_overpaid\": \"R$ 0,00\",\n    \"fines_on_occurrence_day\": null,\n    \"total_on_occurrence_day\": null,\n    \"fines_on_occurrence_day_cents\": null,\n    \"total_on_occurrence_day_cents\": null,\n    \"advance_fee\": null,\n    \"paid\": \"R$ 0,00\",\n    \"commission\": \"R$ 0,00\",\n    \"interest\": null,\n    \"discount\": null,\n    \"created_at\": \"26/11, 10:41 h\",\n    \"refundable\": null,\n    \"installments\": null,\n    \"transaction_number\": 50053,\n    \"payment_method\": null,\n    \"created_at_iso\": \"2015-11-26T10:41:19-02:00\",\n    \"updated_at_iso\": \"2015-11-26T10:41:19-02:00\",\n    \"financial_return_dates\": null,\n    \"bank_slip\": {\n        \"digitable_line\": \"23793.38128 50000.005004 53000.050806 1 66580000006000\",\n        \"barcode_data\": \"23791665800000060003381250000005005300005080\",\n        \"barcode\": \"https://iugu.com/invoices/barcode/856856f5-ada1-44f6-8da6-e5dbef870434-fe5d\"\n    },\n    \"items\": [\n        {\n            \"id\": \"6FEE1E9B576D4D8DBB7A1CE5AFB5CFCC\",\n            \"description\": \"Item Novo\",\n            \"price_cents\": 1000,\n            \"quantity\": 1,\n            \"created_at\": \"2015-11-26T10:41:19-02:00\",\n            \"updated_at\": \"2015-11-26T10:41:19-02:00\",\n            \"price\": \"R$ 10,00\"\n        },\n        {\n            \"id\": \"F6AB80CCA459434E980F59846C948B2C\",\n            \"description\": \"Item 1\",\n            \"price_cents\": 5000,\n            \"quantity\": 1,\n            \"created_at\": \"2015-11-26T10:41:19-02:00\",\n            \"updated_at\": \"2015-11-26T10:41:19-02:00\",\n            \"price\": \"R$ 50,00\"\n        }\n    ],\n    \"variables\": [\n        {\n            \"id\": \"82139DD9E6704A369AEA0C7F50335EA9\",\n            \"variable\": \"payment_data.transaction_number\",\n            \"value\": \"1111\"\n        }\n    ],\n    \"custom_variables\": [],\n    \"logs\": [\n        {\n            \"id\": \"DF6A3748D2024E60A15189196264070A\",\n            \"description\": \"Segunda via gerada\",\n            \"notes\": \"Segunda via gerada da FATURA # 3062A45BC5C240C685C5D6A2B4C78668\",\n            \"created_at\": \"26/11, 10:41 h\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "856856F5ADA144F68DA6E5DBEF870434"
                    },
                    "due_date": {
                      "type": "string",
                      "example": "2015-12-30"
                    },
                    "currency": {
                      "type": "string",
                      "example": "BRL"
                    },
                    "discount_cents": {},
                    "email": {
                      "type": "string",
                      "example": "email@email.com"
                    },
                    "items_total_cents": {
                      "type": "integer",
                      "example": 6000,
                      "default": 0
                    },
                    "notification_url": {},
                    "return_url": {},
                    "status": {
                      "type": "string",
                      "example": "pending"
                    },
                    "tax_cents": {},
                    "updated_at": {
                      "type": "string",
                      "example": "2015-11-26T10:41:19-02:00"
                    },
                    "total_cents": {
                      "type": "integer",
                      "example": 6000,
                      "default": 0
                    },
                    "total_paid_cents": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "paid_at": {},
                    "commission_cents": {},
                    "taxes_paid_cents": {},
                    "paid_cents": {},
                    "cc_emails": {},
                    "financial_return_date": {},
                    "payable_with": {
                      "type": "string",
                      "example": "all"
                    },
                    "overpaid_cents": {},
                    "ignore_due_email": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "ignore_canceled_email": {},
                    "secure_id": {
                      "type": "string",
                      "example": "856856f5-ada1-44f6-8da6-e5dbef870434-fe5d"
                    },
                    "secure_url": {
                      "type": "string",
                      "example": "https://iugu.com/invoices/856856f5-ada1-44f6-8da6-e5dbef870434-fe5d"
                    },
                    "customer_id": {},
                    "customer_ref": {},
                    "customer_name": {},
                    "user_id": {},
                    "total": {
                      "type": "string",
                      "example": "R$ 60,00"
                    },
                    "taxes_paid": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "total_paid": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "total_overpaid": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "fines_on_occurrence_day": {},
                    "total_on_occurrence_day": {},
                    "fines_on_occurrence_day_cents": {},
                    "total_on_occurrence_day_cents": {},
                    "advance_fee": {},
                    "paid": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "commission": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "interest": {},
                    "discount": {},
                    "created_at": {
                      "type": "string",
                      "example": "26/11, 10:41 h"
                    },
                    "refundable": {},
                    "installments": {},
                    "transaction_number": {
                      "type": "integer",
                      "example": 50053,
                      "default": 0
                    },
                    "payment_method": {},
                    "created_at_iso": {
                      "type": "string",
                      "example": "2015-11-26T10:41:19-02:00"
                    },
                    "updated_at_iso": {
                      "type": "string",
                      "example": "2015-11-26T10:41:19-02:00"
                    },
                    "financial_return_dates": {},
                    "bank_slip": {
                      "type": "object",
                      "properties": {
                        "digitable_line": {
                          "type": "string",
                          "example": "23793.38128 50000.005004 53000.050806 1 66580000006000"
                        },
                        "barcode_data": {
                          "type": "string",
                          "example": "23791665800000060003381250000005005300005080"
                        },
                        "barcode": {
                          "type": "string",
                          "example": "https://iugu.com/invoices/barcode/856856f5-ada1-44f6-8da6-e5dbef870434-fe5d"
                        }
                      }
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "6FEE1E9B576D4D8DBB7A1CE5AFB5CFCC"
                          },
                          "description": {
                            "type": "string",
                            "example": "Item Novo"
                          },
                          "price_cents": {
                            "type": "integer",
                            "example": 1000,
                            "default": 0
                          },
                          "quantity": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2015-11-26T10:41:19-02:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2015-11-26T10:41:19-02:00"
                          },
                          "price": {
                            "type": "string",
                            "example": "R$ 10,00"
                          }
                        }
                      }
                    },
                    "variables": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "82139DD9E6704A369AEA0C7F50335EA9"
                          },
                          "variable": {
                            "type": "string",
                            "example": "payment_data.transaction_number"
                          },
                          "value": {
                            "type": "string",
                            "example": "1111"
                          }
                        }
                      }
                    },
                    "custom_variables": {
                      "type": "array"
                    },
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "DF6A3748D2024E60A15189196264070A"
                          },
                          "description": {
                            "type": "string",
                            "example": "Segunda via gerada"
                          },
                          "notes": {
                            "type": "string",
                            "example": "Segunda via gerada da FATURA # 3062A45BC5C240C685C5D6A2B4C78668"
                          },
                          "created_at": {
                            "type": "string",
                            "example": "26/11, 10:41 h"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoices/{id}": {
      "get": {
        "summary": "Consultar Fatura",
        "description": "Retorna os dados de uma Fatura.",
        "operationId": "buscar-fatura",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Fatura",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"id\": \"1F4A677632124572BB0B76B927AABF81\",\n\t\"due_date\": \"2023-03-17\",\n\t\"currency\": \"BRL\",\n\t\"discount_cents\": null,\n\t\"email\": \"teste@teste.com\",\n\t\"items_total_cents\": 116162,\n\t\"notification_url\": null,\n\t\"return_url\": null,\n\t\"status\": \"pending\",\n\t\"tax_cents\": null,\n\t\"total_cents\": 116162,\n\t\"total_paid_cents\": 0,\n\t\"taxes_paid_cents\": null,\n\t\"paid_at\": null,\n\t\"paid_cents\": null,\n\t\"cc_emails\": \"\",\n\t\"financial_return_date\": null,\n\t\"payable_with\": \"bank_slip\",\n\t\"overpaid_cents\": null,\n\t\"ignore_due_email\": null,\n\t\"ignore_canceled_email\": null,\n\t\"advance_fee_cents\": null,\n\t\"commission_cents\": null,\n\t\"early_payment_discount\": true,\n\t\"order_id\": null,\n\t\"updated_at\": \"2023-02-15T12:15:35-03:00\",\n\t\"credit_card_brand\": null,\n\t\"credit_card_bin\": null,\n\t\"credit_card_last_4\": null,\n\t\"credit_card_captured_at\": null,\n\t\"credit_card_tid\": null,\n\t\"external_reference\": null,\n\t\"max_installments_value\": null,\n\t\"payer_name\": \"Pedro Eduardo Silva\",\n\t\"payer_email\": \"eduardototi@gmail.com\",\n\t\"payer_cpf_cnpj\": \"00840400098\",\n\t\"payer_phone\": \"995820154\",\n\t\"payer_phone_prefix\": \"41\",\n\t\"payer_address_zip_code\": \"80320060\",\n\t\"payer_address_street\": \"Rua Dorival Pereira Jorge\",\n\t\"payer_address_district\": \"Vila Izabel\",\n\t\"payer_address_city\": \"Curitiba\",\n\t\"payer_address_state\": \"PR\",\n\t\"payer_address_number\": \"401\",\n\t\"payer_address_complement\": \"pa 41\",\n\t\"payer_address_country\": null,\n\t\"late_payment_fine\": 0,\n\t\"late_payment_fine_cents\": null,\n\t\"split_id\": null,\n\t\"external_payment_id\": null,\n\t\"external_payment_description\": null,\n\t\"account_id\": \"E6495D15290D47D3950C2A723D07A24E\",\n\t\"bank_account_branch\": \"0001\",\n\t\"bank_account_number\": \"5153532-0\",\n\t\"account_name\": \"Tech Test \",\n\t\"secure_id\": \"1f4a6776-3212-4572-bb0b-76b927aabf81-e588\",\n\t\"secure_url\": \"https://faturas.iugu.com/1f4a6776-3212-4572-bb0b-76b927aabf81-e588\",\n\t\"customer_id\": \"F60561E626584066B674E3C3C23BFE73\",\n\t\"customer_ref\": \"teste\",\n\t\"customer_name\": \"teste\",\n\t\"user_id\": null,\n\t\"total\": \"R$ 1.161,62\",\n\t\"taxes_paid\": \"R$ 0,00\",\n\t\"total_paid\": \"R$ 0,00\",\n\t\"total_overpaid\": \"R$ 0,00\",\n\t\"total_refunded\": \"R$ 0,00\",\n\t\"commission\": \"R$ 0,00\",\n\t\"fines_on_occurrence_day\": \"R$ 0,00\",\n\t\"total_on_occurrence_day\": \"R$ 0,00\",\n\t\"fines_on_occurrence_day_cents\": 0,\n\t\"total_on_occurrence_day_cents\": 0,\n\t\"refunded_cents\": 0,\n\t\"remaining_captured_cents\": 0,\n\t\"advance_fee\": null,\n\t\"estimated_advance_fee\": null,\n\t\"paid\": \"R$ 0,00\",\n\t\"original_payment_id\": null,\n\t\"double_payment_id\": null,\n\t\"per_day_interest\": true,\n\t\"per_day_interest_value\": 0,\n\t\"interest\": null,\n\t\"discount\": null,\n\t\"duplicated_invoice_id\": null,\n\t\"created_at\": \"15/02, 12:14\",\n\t\"created_at_iso\": \"2023-02-15T12:14:16-03:00\",\n\t\"authorized_at\": null,\n\t\"authorized_at_iso\": null,\n\t\"expired_at\": null,\n\t\"expired_at_iso\": null,\n\t\"refunded_at\": null,\n\t\"refunded_at_iso\": null,\n\t\"canceled_at\": null,\n\t\"canceled_at_iso\": null,\n\t\"protested_at\": null,\n\t\"protested_at_iso\": null,\n\t\"chargeback_at\": null,\n\t\"chargeback_at_iso\": null,\n\t\"occurrence_date\": null,\n\t\"refundable\": null,\n\t\"installments\": null,\n\t\"transaction_number\": 60718763,\n\t\"payment_method\": null,\n\t\"financial_return_dates\": null,\n\t\"bank_slip\": {\n\t\t\"digitable_line\": \"40192023004600000000300000070342192920000116162\",\n\t\t\"barcode_data\": \"40191929200001161622023046000000000000007034\",\n\t\t\"barcode\": \"https://api.iugu.com/v1/public/invoice/1f4a6776-3212-4572-bb0b-76b927aabf81-e588/barcode\",\n\t\t\"bank_slip_bank\": 401,\n\t\t\"bank_slip_status\": \"registered\",\n\t\t\"bank_slip_error_code\": \"00\",\n\t\t\"bank_slip_error_message\": null\n\t},\n\t\"pix\": {\n\t\t\"qrcode\": null,\n\t\t\"qrcode_text\": null,\n\t\t\"status\": null,\n\t\t\"payer_cpf_cnpj\": null,\n\t\t\"payer_name\": null,\n\t\t\"end_to_end_id\": null,\n\t\t\"end_to_end_refund_id\": null\n\t},\n\t\"items\": [{\n\t\t\"id\": \"E1049729A2CE4CB2A51CA265C1E83F0A\",\n\t\t\"description\": \"Carne de 08/02/2023 - parcela 2 de 2\",\n\t\t\"price_cents\": 116162,\n\t\t\"quantity\": 1,\n\t\t\"created_at\": \"2023-02-15T12:14:16-03:00\",\n\t\t\"updated_at\": \"2023-02-15T12:14:16-03:00\",\n\t\t\"price\": \"R$ 1.161,62\"\n\t}],\n\t\"early_payment_discounts\": [{\n\t\t\"percent\": 10.0,\n\t\t\"days\": 5\n\t}],\n\t\"split_rules\": null,\n\t\"variables\": [{\n\t\t\t\"variable\": \"next_dunning_date\",\n\t],\n\t\"custom_variables\": [],\n\t\"logs\": [{\n\t\t\t\"id\": \"FA8F4422AAB94FE5AE48EC5CA11B91D2\",\n\t\t\t\"description\": \"Fatura visualizada!\",\n\t\t\t\"notes\": \"Fatura visualizada!!\",\n\t\t\t\"created_at\": \"15/02, 12:18\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"8C7DD469B1614D4D98C7813D991B9CF3\",\n\t\t\t\"description\": \"SMS de Lembrete enviado!\",\n\t\t\t\"notes\": \"Lembrete enviado para: 41995820154 | 1\",\n\t\t\t\"created_at\": \"15/02, 12:14\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"AAB91A8C4B0D40A3AC2522F34B551D76\",\n\t\t\t\"description\": \"Email de Lembrete enviado!\",\n\t\t\t\"notes\": \"Lembrete enviado com sucesso para: eduardototi@gmail.com\",\n\t\t\t\"created_at\": \"15/02, 12:14\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"C378506A0B7547D6B305B33D7D8DD168\",\n\t\t\t\"description\": \"Fatura criada com sucesso!\",\n\t\t\t\"notes\": \"Fatura criada!\",\n\t\t\t\"created_at\": \"15/02, 12:14\"\n\t\t}\n\t],\n\t\"credit_card_transaction\": null\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoices/{id}/cancel": {
      "put": {
        "summary": "Cancelar Fatura",
        "description": "Cancela uma Fatura. O status da fatura não pode ser 'expired' (expirado).",
        "operationId": "cancelar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Fatura",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"id\": \"0958D2AAD34049AB889583E26DFA0BF1\",\n    \"due_date\": \"2013-11-30\",\n    \"currency\": \"BRL\",\n    \"discount_cents\": null,\n    \"email\": \"teste@teste.com\",\n    \"items_total_cents\": 1000,\n    \"notification_url\": null,\n    \"return_url\": null,\n    \"status\": \"canceled\",\n    \"tax_cents\": null,\n    \"updated_at\": \"2014-06-17T09:58:05-03:00\",\n    \"total_cents\": 1000,\n    \"paid_at\": null,\n    \"commission_cents\": null,\n    \"secure_id\": \"0958d2aa-d340-49ab-8895-83e26dfa0bf1-2f4c\",\n    \"secure_url\": \"http://iugu.com/invoices/0958d2aa-d340-49ab-8895-83e26dfa0bf1-2f4c\",\n    \"customer_id\": null,\n    \"user_id\": null,\n    \"total\": \"R$ 10,00\",\n    \"taxes_paid\": \"R$ 0,00\",\n    \"commission\": \"R$ 0,00\",\n    \"interest\": null,\n    \"discount\": null,\n    \"created_at\": \"17/06, 09:58 h\",\n    \"refundable\": null,\n    \"installments\": null,\n    \"bank_slip\": {\n        \"digitable_line\": \"00000000000000000000000000000000000000000000000\",\n        \"barcode_data\": \"00000000000000000000000000000000000000000000\",\n        \"barcode\": \"http://iugu.com/invoices/barcode/0958d2aa-d340-49ab-8895-83e26dfa0bf1-2f4c\"\n    },\n    \"items\": [{\n        \"id\": \"11DA8B1662EC4C30BC4C78AEDC619145\",\n        \"description\": \"Item Um\",\n        \"price_cents\": 1000,\n        \"quantity\": 1,\n        \"created_at\": \"2014-06-17T09:58:05-03:00\",\n        \"updated_at\": \"2014-06-17T09:58:05-03:00\",\n        \"price\": \"R$ 10,00\"\n    }],\n    \"variables\": [{\n        \"id\": \"A897DD8BB6B54AE18CA4C48684E72FB9\",\n        \"variable\": \"payment_data.transaction_number\",\n        \"value\": \"1111\"\n    }],\n    \"custom_variables\": [],\n    \"logs\": []\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "0958D2AAD34049AB889583E26DFA0BF1"
                    },
                    "due_date": {
                      "type": "string",
                      "example": "2013-11-30"
                    },
                    "currency": {
                      "type": "string",
                      "example": "BRL"
                    },
                    "discount_cents": {},
                    "email": {
                      "type": "string",
                      "example": "teste@teste.com"
                    },
                    "items_total_cents": {
                      "type": "integer",
                      "example": 1000,
                      "default": 0
                    },
                    "notification_url": {},
                    "return_url": {},
                    "status": {
                      "type": "string",
                      "example": "canceled"
                    },
                    "tax_cents": {},
                    "updated_at": {
                      "type": "string",
                      "example": "2014-06-17T09:58:05-03:00"
                    },
                    "total_cents": {
                      "type": "integer",
                      "example": 1000,
                      "default": 0
                    },
                    "paid_at": {},
                    "commission_cents": {},
                    "secure_id": {
                      "type": "string",
                      "example": "0958d2aa-d340-49ab-8895-83e26dfa0bf1-2f4c"
                    },
                    "secure_url": {
                      "type": "string",
                      "example": "http://iugu.com/invoices/0958d2aa-d340-49ab-8895-83e26dfa0bf1-2f4c"
                    },
                    "customer_id": {},
                    "user_id": {},
                    "total": {
                      "type": "string",
                      "example": "R$ 10,00"
                    },
                    "taxes_paid": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "commission": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "interest": {},
                    "discount": {},
                    "created_at": {
                      "type": "string",
                      "example": "17/06, 09:58 h"
                    },
                    "refundable": {},
                    "installments": {},
                    "bank_slip": {
                      "type": "object",
                      "properties": {
                        "digitable_line": {
                          "type": "string",
                          "example": "00000000000000000000000000000000000000000000000"
                        },
                        "barcode_data": {
                          "type": "string",
                          "example": "00000000000000000000000000000000000000000000"
                        },
                        "barcode": {
                          "type": "string",
                          "example": "http://iugu.com/invoices/barcode/0958d2aa-d340-49ab-8895-83e26dfa0bf1-2f4c"
                        }
                      }
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "11DA8B1662EC4C30BC4C78AEDC619145"
                          },
                          "description": {
                            "type": "string",
                            "example": "Item Um"
                          },
                          "price_cents": {
                            "type": "integer",
                            "example": 1000,
                            "default": 0
                          },
                          "quantity": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2014-06-17T09:58:05-03:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2014-06-17T09:58:05-03:00"
                          },
                          "price": {
                            "type": "string",
                            "example": "R$ 10,00"
                          }
                        }
                      }
                    },
                    "variables": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "A897DD8BB6B54AE18CA4C48684E72FB9"
                          },
                          "variable": {
                            "type": "string",
                            "example": "payment_data.transaction_number"
                          },
                          "value": {
                            "type": "string",
                            "example": "1111"
                          }
                        }
                      }
                    },
                    "custom_variables": {
                      "type": "array"
                    },
                    "logs": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoices/{id}/capture": {
      "post": {
        "summary": "Capturar Fatura",
        "description": "Captura uma fatura com status \"em análise\" (`in_analysis`) através do seu ID. [Para mais informações sobre cobrança em duas etapas](https://dev.iugu.com/docs/cobran%C3%A7a-em-duas-etapas)",
        "operationId": "capturar-fatura",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Fatura",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"id\": \"5A4CBC68F7A647ECADD59D4E1B4B0DDF\",\n    \"due_date\": \"2015-04-07\",\n    \"currency\": \"BRL\",\n    \"discount_cents\": null,\n    \"email\": \"email@email.com\",\n    \"items_total_cents\": 15000,\n    \"notification_url\": null,\n    \"return_url\": null,\n    \"status\": \"paid\",\n    \"tax_cents\": null,\n    \"updated_at\": \"2015-04-08T11:06:43-03:00\",\n    \"total_cents\": 15000,\n    \"paid_at\": \"2015-04-08T11:06:43-03:00\",\n    \"taxes_paid_cents\": 705,\n    \"paid_cents\": 15000,\n    \"cc_emails\": null,\n    \"financial_return_date\": \"2015-05-08\",\n    \"payable_with\": \"all\",\n    \"commission_cents\": 0,\n    \"secure_id\": \"5a4cbc68-f7a6-47ec-add5-9d4e1b4b0ddf-1342\",\n    \"secure_url\": \"http://iugu.com/invoices/5a4cbc68-f7a6-47ec-add5-9d4e1b4b0ddf-1342\",\n    \"commission\": \"R$ 0,00\",\n    \"customer_id\": \"8747577C7C044D38B837844C751D2DCA\",\n    \"customer_ref\": \"Nome do Cliente\",\n    \"customer_name\": \"Nome do Cliente\",\n    \"financial_return_dates\": [\n        {\n            \"installment\": 1,\n            \"return_date\": \"2015-05-08\",\n            \"status\": \"pending\"\n        }\n    ],\n    \"user_id\": \"B733FEEDF4774F3A8EA33BF3682D532F\",\n    \"total\": \"R$ 150,00\",\n    \"taxes_paid\": \"R$ 7,05\",\n    \"fines_on_occurrence_day\": \"R$ 0,00\",\n    \"total_on_occurrence_day\": \"R$ 150,00\",\n    \"fines_on_occurrence_day_cents\": 0,\n    \"total_on_occurrence_day_cents\": 15000,\n    \"advance_fee\": null,\n    \"paid\": \"R$ 150,00\",\n    \"interest\": null,\n    \"discount\": null,\n    \"created_at\": \"07/04, 15:09 h\",\n    \"refundable\": true,\n    \"installments\": \"1\",\n    \"transaction_number\": 50019,\n    \"created_at_iso\": \"2015-04-07T15:09:56-03:00\",\n    \"updated_at_iso\": \"2015-04-08T11:06:43-03:00\",\n    \"bank_slip\": null,\n    \"items\": [\n        {\n            \"id\": \"E0174FC31EB94E84A106F7A6F9AE2B6E\",\n            \"description\": \"Item 1\",\n            \"price_cents\": 15000,\n            \"quantity\": 1,\n            \"created_at\": \"2015-04-07T15:09:56-03:00\",\n            \"updated_at\": \"2015-04-07T15:09:56-03:00\",\n            \"price\": \"R$ 150,00\"\n        }\n    ],\n    \"variables\": [\n        {\n            \"id\": \"A8C555AF7A6C43EFAF16C8AF26E20FDE\",\n            \"variable\": \"payment_data.transaction_number\",\n            \"value\": \"50019\"\n        }\n    ],\n    \"custom_variables\": [],\n    \"logs\": [],\n    \"credit_card_transaction\": {\n      \"status\": \"authorized\",\n      \"message\": \"Autorizado\",\n      \"success\": true,\n      \"lr\": \"00\",\n      \"reversible\": false,\n      \"token\": \"A897DD8BB6B54AE18CA4C48684E72FB9\",\n      \"brand\": \"master\",\n      \"bin\": \"409876\",\n      \"last4\": \"1234\",\n      \"created_at\": \"2014-06-17T09:58:05-03:00\",\n      \"updated_at\": \"2014-06-17T09:58:05-03:00\",\n      \"authorized_at\": \"2014-06-17T09:58:05-03:00\",\n      \"captured_at\": \"2014-06-17T09:58:05-03:00\",\n      \"canceled_at\": \"2014-06-17T09:58:05-03:00\"        \n    }      \n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "5A4CBC68F7A647ECADD59D4E1B4B0DDF"
                    },
                    "due_date": {
                      "type": "string",
                      "example": "2015-04-07"
                    },
                    "currency": {
                      "type": "string",
                      "example": "BRL"
                    },
                    "discount_cents": {},
                    "email": {
                      "type": "string",
                      "example": "email@email.com"
                    },
                    "items_total_cents": {
                      "type": "integer",
                      "example": 15000,
                      "default": 0
                    },
                    "notification_url": {},
                    "return_url": {},
                    "status": {
                      "type": "string",
                      "example": "paid"
                    },
                    "tax_cents": {},
                    "updated_at": {
                      "type": "string",
                      "example": "2015-04-08T11:06:43-03:00"
                    },
                    "total_cents": {
                      "type": "integer",
                      "example": 15000,
                      "default": 0
                    },
                    "paid_at": {
                      "type": "string",
                      "example": "2015-04-08T11:06:43-03:00"
                    },
                    "taxes_paid_cents": {
                      "type": "integer",
                      "example": 705,
                      "default": 0
                    },
                    "paid_cents": {
                      "type": "integer",
                      "example": 15000,
                      "default": 0
                    },
                    "cc_emails": {},
                    "financial_return_date": {
                      "type": "string",
                      "example": "2015-05-08"
                    },
                    "payable_with": {
                      "type": "string",
                      "example": "all"
                    },
                    "commission_cents": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "secure_id": {
                      "type": "string",
                      "example": "5a4cbc68-f7a6-47ec-add5-9d4e1b4b0ddf-1342"
                    },
                    "secure_url": {
                      "type": "string",
                      "example": "http://iugu.com/invoices/5a4cbc68-f7a6-47ec-add5-9d4e1b4b0ddf-1342"
                    },
                    "commission": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "customer_id": {
                      "type": "string",
                      "example": "8747577C7C044D38B837844C751D2DCA"
                    },
                    "customer_ref": {
                      "type": "string",
                      "example": "Nome do Cliente"
                    },
                    "customer_name": {
                      "type": "string",
                      "example": "Nome do Cliente"
                    },
                    "financial_return_dates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "installment": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "return_date": {
                            "type": "string",
                            "example": "2015-05-08"
                          },
                          "status": {
                            "type": "string",
                            "example": "pending"
                          }
                        }
                      }
                    },
                    "user_id": {
                      "type": "string",
                      "example": "B733FEEDF4774F3A8EA33BF3682D532F"
                    },
                    "total": {
                      "type": "string",
                      "example": "R$ 150,00"
                    },
                    "taxes_paid": {
                      "type": "string",
                      "example": "R$ 7,05"
                    },
                    "fines_on_occurrence_day": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "total_on_occurrence_day": {
                      "type": "string",
                      "example": "R$ 150,00"
                    },
                    "fines_on_occurrence_day_cents": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "total_on_occurrence_day_cents": {
                      "type": "integer",
                      "example": 15000,
                      "default": 0
                    },
                    "advance_fee": {},
                    "paid": {
                      "type": "string",
                      "example": "R$ 150,00"
                    },
                    "interest": {},
                    "discount": {},
                    "created_at": {
                      "type": "string",
                      "example": "07/04, 15:09 h"
                    },
                    "refundable": {
                      "type": "boolean",
                      "example": true,
                      "default": true
                    },
                    "installments": {
                      "type": "string",
                      "example": "1"
                    },
                    "transaction_number": {
                      "type": "integer",
                      "example": 50019,
                      "default": 0
                    },
                    "created_at_iso": {
                      "type": "string",
                      "example": "2015-04-07T15:09:56-03:00"
                    },
                    "updated_at_iso": {
                      "type": "string",
                      "example": "2015-04-08T11:06:43-03:00"
                    },
                    "bank_slip": {},
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "E0174FC31EB94E84A106F7A6F9AE2B6E"
                          },
                          "description": {
                            "type": "string",
                            "example": "Item 1"
                          },
                          "price_cents": {
                            "type": "integer",
                            "example": 15000,
                            "default": 0
                          },
                          "quantity": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2015-04-07T15:09:56-03:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2015-04-07T15:09:56-03:00"
                          },
                          "price": {
                            "type": "string",
                            "example": "R$ 150,00"
                          }
                        }
                      }
                    },
                    "variables": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "A8C555AF7A6C43EFAF16C8AF26E20FDE"
                          },
                          "variable": {
                            "type": "string",
                            "example": "payment_data.transaction_number"
                          },
                          "value": {
                            "type": "string",
                            "example": "50019"
                          }
                        }
                      }
                    },
                    "custom_variables": {
                      "type": "array"
                    },
                    "logs": {
                      "type": "array"
                    },
                    "credit_card_transaction": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "authorized"
                        },
                        "message": {
                          "type": "string",
                          "example": "Autorizado"
                        },
                        "success": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "lr": {
                          "type": "string",
                          "example": "00"
                        },
                        "reversible": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "token": {
                          "type": "string",
                          "example": "A897DD8BB6B54AE18CA4C48684E72FB9"
                        },
                        "brand": {
                          "type": "string",
                          "example": "master"
                        },
                        "bin": {
                          "type": "string",
                          "example": "409876"
                        },
                        "last4": {
                          "type": "string",
                          "example": "1234"
                        },
                        "created_at": {
                          "type": "string",
                          "example": "2014-06-17T09:58:05-03:00"
                        },
                        "updated_at": {
                          "type": "string",
                          "example": "2014-06-17T09:58:05-03:00"
                        },
                        "authorized_at": {
                          "type": "string",
                          "example": "2014-06-17T09:58:05-03:00"
                        },
                        "captured_at": {
                          "type": "string",
                          "example": "2014-06-17T09:58:05-03:00"
                        },
                        "canceled_at": {
                          "type": "string",
                          "example": "2014-06-17T09:58:05-03:00"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoices/{id}/refund": {
      "post": {
        "summary": "Reembolsar Fatura",
        "description": "Efetua o reembolso de uma Fatura. Somente alguns meios de pagamento permitem o reembolso, como por exemplo Cartão de Crédito e Pix. Após o reembolso, a Fatura fica com o status de \"reembolsada\", ou \"refunded\". [Para mais informações sobre Reembolso de faturas](https://dev.iugu.com/docs/realizar-o-reembolso-de-faturas-estorno-por-api)",
        "operationId": "reembolsar-fatura",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Fatura",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "partial_value_refund_cents": {
                    "type": "integer",
                    "description": "Valor parcial a ser reembolsado (somente cartão de crédito)",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"id\": \"0958D2AAD34049AB889583E26DFA0BF1\",\n    \"due_date\": \"2013-11-30\",\n    \"currency\": \"BRL\",\n    \"discount_cents\": null,\n    \"email\": \"teste@teste.com\",\n    \"items_total_cents\": 1000,\n    \"notification_url\": null,\n    \"return_url\": null,\n    \"status\": \"refunded\",\n    \"tax_cents\": null,\n    \"updated_at\": \"2014-06-17T09:58:05-03:00\",\n    \"total_cents\": 1000,\n    \"paid_at\": null,\n    \"commission_cents\": 0,\n    \"secure_id\": \"0958d2aa-d340-49ab-8895-83e26dfa0bf1-2f4c\",\n    \"secure_url\": \"http://iugu.com/invoices/0958d2aa-d340-49ab-8895-83e26dfa0bf1-2f4c\",\n    \"customer_id\": null,\n    \"user_id\": null,\n    \"total\": \"R$ 10,00\",\n    \"taxes_paid\": \"R$ 0,00\",\n    \"commission\": \"R$ 0,00\",\n    \"interest\": null,\n    \"discount\": null,\n    \"created_at\": \"17/06, 09:58 h\",\n    \"refundable\": null,\n    \"installments\": null,\n    \"bank_slip\": {\n        \"digitable_line\": \"00000000000000000000000000000000000000000000000\",\n        \"barcode_data\": \"00000000000000000000000000000000000000000000\",\n        \"barcode\": \"http://iugu.com/invoices/barcode/0958d2aa-d340-49ab-8895-83e26dfa0bf1-2f4c\"\n    },\n    \"items\": [{\n        \"id\": \"11DA8B1662EC4C30BC4C78AEDC619145\",\n        \"description\": \"Item Um\",\n        \"price_cents\": 1000,\n        \"quantity\": 1,\n        \"created_at\": \"2014-06-17T09:58:05-03:00\",\n        \"updated_at\": \"2014-06-17T09:58:05-03:00\",\n        \"price\": \"R$ 10,00\"\n    }],\n    \"variables\": [{\n        \"id\": \"A897DD8BB6B54AE18CA4C48684E72FB9\",\n        \"variable\": \"payment_data.transaction_number\",\n        \"value\": \"1111\"\n    }],\n    \"custom_variables\": [],\n    \"logs\": []\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "0958D2AAD34049AB889583E26DFA0BF1"
                    },
                    "due_date": {
                      "type": "string",
                      "example": "2013-11-30"
                    },
                    "currency": {
                      "type": "string",
                      "example": "BRL"
                    },
                    "discount_cents": {},
                    "email": {
                      "type": "string",
                      "example": "teste@teste.com"
                    },
                    "items_total_cents": {
                      "type": "integer",
                      "example": 1000,
                      "default": 0
                    },
                    "notification_url": {},
                    "return_url": {},
                    "status": {
                      "type": "string",
                      "example": "refunded"
                    },
                    "tax_cents": {},
                    "updated_at": {
                      "type": "string",
                      "example": "2014-06-17T09:58:05-03:00"
                    },
                    "total_cents": {
                      "type": "integer",
                      "example": 1000,
                      "default": 0
                    },
                    "paid_at": {},
                    "commission_cents": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "secure_id": {
                      "type": "string",
                      "example": "0958d2aa-d340-49ab-8895-83e26dfa0bf1-2f4c"
                    },
                    "secure_url": {
                      "type": "string",
                      "example": "http://iugu.com/invoices/0958d2aa-d340-49ab-8895-83e26dfa0bf1-2f4c"
                    },
                    "customer_id": {},
                    "user_id": {},
                    "total": {
                      "type": "string",
                      "example": "R$ 10,00"
                    },
                    "taxes_paid": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "commission": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "interest": {},
                    "discount": {},
                    "created_at": {
                      "type": "string",
                      "example": "17/06, 09:58 h"
                    },
                    "refundable": {},
                    "installments": {},
                    "bank_slip": {
                      "type": "object",
                      "properties": {
                        "digitable_line": {
                          "type": "string",
                          "example": "00000000000000000000000000000000000000000000000"
                        },
                        "barcode_data": {
                          "type": "string",
                          "example": "00000000000000000000000000000000000000000000"
                        },
                        "barcode": {
                          "type": "string",
                          "example": "http://iugu.com/invoices/barcode/0958d2aa-d340-49ab-8895-83e26dfa0bf1-2f4c"
                        }
                      }
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "11DA8B1662EC4C30BC4C78AEDC619145"
                          },
                          "description": {
                            "type": "string",
                            "example": "Item Um"
                          },
                          "price_cents": {
                            "type": "integer",
                            "example": 1000,
                            "default": 0
                          },
                          "quantity": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2014-06-17T09:58:05-03:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2014-06-17T09:58:05-03:00"
                          },
                          "price": {
                            "type": "string",
                            "example": "R$ 10,00"
                          }
                        }
                      }
                    },
                    "variables": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "A897DD8BB6B54AE18CA4C48684E72FB9"
                          },
                          "variable": {
                            "type": "string",
                            "example": "payment_data.transaction_number"
                          },
                          "value": {
                            "type": "string",
                            "example": "1111"
                          }
                        }
                      }
                    },
                    "custom_variables": {
                      "type": "array"
                    },
                    "logs": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoices/{id}/send_email": {
      "post": {
        "summary": "Enviar Fatura por Email",
        "description": "Envia a fatura iugu para o email vinculado a ela.",
        "operationId": "enviar-por-email",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da fatura.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"id\": \"9F420E7FD2534A68BF4DC20951E2B371\",\n  \"due_date\": \"2020-01-01\",\n  \"currency\": \"BRL\",\n  \"discount_cents\": null,\n  \"email\": \"email@cliente.com\",\n  \"items_total_cents\": 10000,\n  \"notification_url\": null,\n  \"return_url\": null,\n  \"status\": \"paid\",\n  \"tax_cents\": null,\n  \"updated_at\": \"2018-01-04T16:37:13-02:00\",\n  \"total_cents\": 10000,\n  \"total_paid_cents\": 10000,\n  \"paid_at\": \"2018-01-04T16:37:13-02:00\",\n  \"taxes_paid_cents\": 480,\n  \"paid_cents\": 10000,\n  \"cc_emails\": null,\n  \"financial_return_date\": null,\n  \"payable_with\": \"credit_card\",\n  \"overpaid_cents\": null,\n  \"ignore_due_email\": true,\n  \"ignore_canceled_email\": true,\n  \"advance_fee_cents\": null,\n  \"commission_cents\": 0,\n  \"early_payment_discount\": true,\n  \"total\": \"R$ 100,00\",\n  \"taxes_paid\": \"R$ 4,80\",\n  \"total_paid\": \"R$ 100,00\",\n  \"total_overpaid\": \"R$ 0,00\",\n  \"commission\": \"R$ 0,00\",\n  \"fines_on_occurrence_day\": \"R$ 0,00\",\n  \"total_on_occurrence_day\": \"R$ 100,00\",\n  \"fines_on_occurrence_day_cents\": 0,\n  \"total_on_occurrence_day_cents\": 10000,\n  \"advance_fee\": null,\n  \"paid\": \"R$ 100,00\",\n  \"interest\": null,\n  \"discount\": null,\n  \"created_at\": \"04/01, 16:37 h\",\n  \"refundable\": true,\n  \"installments\": \"1\",\n  \"transaction_number\": 1111,\n  \"payment_method\": \"iugu_credit_card_test\",\n  \"created_at_iso\": \"2018-01-04T16:37:13-02:00\",\n  \"updated_at_iso\": \"2018-01-04T16:37:13-02:00\",\n  \"occurrence_date\": \"2018-01-04\",\n  \"financial_return_dates\": null,\n  \"bank_slip\": null,\n  \"items\": [],\n  \"early_payment_discounts\": [],\n  \"variables\": [],\n  \"custom_variables\": [],\n  \"logs\": []\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "9F420E7FD2534A68BF4DC20951E2B371"
                    },
                    "due_date": {
                      "type": "string",
                      "example": "2020-01-01"
                    },
                    "currency": {
                      "type": "string",
                      "example": "BRL"
                    },
                    "discount_cents": {},
                    "email": {
                      "type": "string",
                      "example": "email@cliente.com"
                    },
                    "items_total_cents": {
                      "type": "integer",
                      "example": 10000,
                      "default": 0
                    },
                    "notification_url": {},
                    "return_url": {},
                    "status": {
                      "type": "string",
                      "example": "paid"
                    },
                    "tax_cents": {},
                    "updated_at": {
                      "type": "string",
                      "example": "2018-01-04T16:37:13-02:00"
                    },
                    "total_cents": {
                      "type": "integer",
                      "example": 10000,
                      "default": 0
                    },
                    "total_paid_cents": {
                      "type": "integer",
                      "example": 10000,
                      "default": 0
                    },
                    "paid_at": {
                      "type": "string",
                      "example": "2018-01-04T16:37:13-02:00"
                    },
                    "taxes_paid_cents": {
                      "type": "integer",
                      "example": 480,
                      "default": 0
                    },
                    "paid_cents": {
                      "type": "integer",
                      "example": 10000,
                      "default": 0
                    },
                    "cc_emails": {},
                    "financial_return_date": {},
                    "payable_with": {
                      "type": "string",
                      "example": "credit_card"
                    },
                    "overpaid_cents": {},
                    "ignore_due_email": {
                      "type": "boolean",
                      "example": true,
                      "default": true
                    },
                    "ignore_canceled_email": {
                      "type": "boolean",
                      "example": true,
                      "default": true
                    },
                    "advance_fee_cents": {},
                    "commission_cents": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "early_payment_discount": {
                      "type": "boolean",
                      "example": true,
                      "default": true
                    },
                    "total": {
                      "type": "string",
                      "example": "R$ 100,00"
                    },
                    "taxes_paid": {
                      "type": "string",
                      "example": "R$ 4,80"
                    },
                    "total_paid": {
                      "type": "string",
                      "example": "R$ 100,00"
                    },
                    "total_overpaid": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "commission": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "fines_on_occurrence_day": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "total_on_occurrence_day": {
                      "type": "string",
                      "example": "R$ 100,00"
                    },
                    "fines_on_occurrence_day_cents": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "total_on_occurrence_day_cents": {
                      "type": "integer",
                      "example": 10000,
                      "default": 0
                    },
                    "advance_fee": {},
                    "paid": {
                      "type": "string",
                      "example": "R$ 100,00"
                    },
                    "interest": {},
                    "discount": {},
                    "created_at": {
                      "type": "string",
                      "example": "04/01, 16:37 h"
                    },
                    "refundable": {
                      "type": "boolean",
                      "example": true,
                      "default": true
                    },
                    "installments": {
                      "type": "string",
                      "example": "1"
                    },
                    "transaction_number": {
                      "type": "integer",
                      "example": 1111,
                      "default": 0
                    },
                    "payment_method": {
                      "type": "string",
                      "example": "iugu_credit_card_test"
                    },
                    "created_at_iso": {
                      "type": "string",
                      "example": "2018-01-04T16:37:13-02:00"
                    },
                    "updated_at_iso": {
                      "type": "string",
                      "example": "2018-01-04T16:37:13-02:00"
                    },
                    "occurrence_date": {
                      "type": "string",
                      "example": "2018-01-04"
                    },
                    "financial_return_dates": {},
                    "bank_slip": {},
                    "items": {
                      "type": "array"
                    },
                    "early_payment_discounts": {
                      "type": "array"
                    },
                    "variables": {
                      "type": "array"
                    },
                    "custom_variables": {
                      "type": "array"
                    },
                    "logs": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": \"Invoice Not Found\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "string",
                      "example": "Invoice Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/invoices/{id}/externally_pay": {
      "put": {
        "summary": "Considerar Fatura Paga Externamente",
        "description": "Possibilita a baixa de pagamento de uma fatura iugu que foi paga externamente e/ou por outros intermédios. Este processo altera o status pendente de uma fatura para \"Paga Externamente\".",
        "operationId": "considerar-fatura-paga-externamente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da fatura na iugu",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "external_payment_id"
                ],
                "properties": {
                  "external_payment_id": {
                    "type": "string",
                    "description": "ID externo da fatura (32 caracteres no máx.)"
                  },
                  "external_payment_description": {
                    "type": "string",
                    "description": "Descrição do pagamento (50 caracteres no máx.)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"id\": \"BD0818C4E96441908503AD36ECC5108A\",\n    \"due_date\": \"2023-02-09\",\n    \"currency\": \"BRL\",\n    \"discount_cents\": 0,\n    \"email\": \"teste\",\n    \"items_total_cents\": 11000,\n    \"notification_url\": null,\n    \"return_url\": null,\n    \"status\": \"externally_paid\",\n    \"tax_cents\": null,\n    \"total_cents\": 11000,\n    \"total_paid_cents\": 0,\n    \"taxes_paid_cents\": null,\n    \"paid_at\": null,\n    \"paid_cents\": null,\n    \"cc_emails\": \"\",\n    \"financial_return_date\": null,\n    \"payable_with\": \"credit_card\",\n    \"overpaid_cents\": null,\n    \"ignore_due_email\": false,\n    \"ignore_canceled_email\": null,\n    \"advance_fee_cents\": null,\n    \"commission_cents\": null,\n    \"early_payment_discount\": false,\n    \"order_id\": null,\n    \"updated_at\": \"2023-02-09T08:21:32-03:00\",\n    \"credit_card_brand\": null,\n    \"credit_card_bin\": null,\n    \"credit_card_last_4\": null,\n    \"credit_card_captured_at\": null,\n    \"credit_card_tid\": null,\n    \"external_reference\": \"\",\n    \"max_installments_value\": null,\n    \"payer_name\": \"Bruno Teste\",\n    \"payer_email\": \"bruwi112406@gmail.com\",\n    \"payer_cpf_cnpj\": null,\n    \"payer_phone\": null,\n    \"payer_phone_prefix\": null,\n    \"payer_address_zip_code\": null,\n    \"payer_address_street\": null,\n    \"payer_address_district\": null,\n    \"payer_address_city\": null,\n    \"payer_address_state\": null,\n    \"payer_address_number\": null,\n    \"payer_address_complement\": null,\n    \"payer_address_country\": null,\n    \"late_payment_fine\": 0,\n    \"late_payment_fine_cents\": null,\n    \"split_id\": null,\n    \"external_payment_id\": \"id_externo\",\n    \"external_payment_description\": \"description\",\n    \"account_id\": \"B03D07618B73411C99FF73AD12268C10\",\n    \"account_name\": \"TestA\",\n    \"secure_id\": \"bd0818c4-e964-4190-8503-ad36ecc5108a-c761\",\n    \"secure_url\": \"https://faturas.iugu.com/bd0818c4-e964-4190-8503-ad36ecc5108a-c761\",\n    \"customer_id\": \"A5DD63FE0C254CA294BD30A455C2858A\",\n    \"customer_ref\": \"Bruno Teste\",\n    \"customer_name\": \"Bruno Teste\",\n    \"user_id\": \"0DF9EF1DB2204ECB9E0DB2E42459ABC5\",\n    \"total\": \"R$ 110,00\",\n    \"taxes_paid\": \"R$ 0,00\",\n    \"total_paid\": \"R$ 0,00\",\n    \"total_overpaid\": \"R$ 0,00\",\n    \"total_refunded\": \"R$ 0,00\",\n    \"commission\": \"R$ 0,00\",\n    \"fines_on_occurrence_day\": \"R$ 0,00\",\n    \"total_on_occurrence_day\": \"R$ 0,00\",\n    \"fines_on_occurrence_day_cents\": 0,\n    \"total_on_occurrence_day_cents\": 0,\n    \"refunded_cents\": 0,\n    \"remaining_captured_cents\": 0,\n    \"advance_fee\": null,\n    \"estimated_advance_fee\": null,\n    \"paid\": \"R$ 0,00\",\n    \"original_payment_id\": null,\n    \"double_payment_id\": null,\n    \"per_day_interest\": false,\n    \"per_day_interest_value\": 0,\n    \"interest\": null,\n    \"discount\": null,\n    \"duplicated_invoice_id\": null,\n    \"created_at\": \"09/02, 07:42\",\n    \"created_at_iso\": \"2023-02-09T07:42:19-03:00\",\n    \"authorized_at\": null,\n    \"authorized_at_iso\": null,\n    \"expired_at\": null,\n    \"expired_at_iso\": null,\n    \"refunded_at\": null,\n    \"refunded_at_iso\": null,\n    \"canceled_at\": null,\n    \"canceled_at_iso\": null,\n    \"protested_at\": null,\n    \"protested_at_iso\": null,\n    \"chargeback_at\": null,\n    \"chargeback_at_iso\": null,\n    \"occurrence_date\": null,\n    \"refundable\": null,\n    \"installments\": null,\n    \"transaction_number\": null,\n    \"payment_method\": null,\n    \"financial_return_dates\": null,\n    \"bank_slip\": null,\n    \"pix\": {\n        \"qrcode\": null,\n        \"qrcode_text\": null,\n        \"status\": null,\n        \"payer_cpf_cnpj\": null,\n        \"payer_name\": null,\n        \"end_to_end_id\": null,\n        \"end_to_end_refund_id\": null\n    },\n    \"items\": [\n        {\n            \"id\": \"83ED4D2A93E447DD96D2ADCD908C0C10\",\n            \"description\": \"teste\",\n            \"price_cents\": 1000,\n            \"quantity\": 11,\n            \"created_at\": \"2023-02-09T07:42:19-03:00\",\n            \"updated_at\": \"2023-02-09T07:42:19-03:00\",\n            \"price\": \"R$ 10,00\"\n        }\n    ],\n    \"early_payment_discounts\": [],\n    \"split_rules\": null,\n    \"variables\": [\n        {\n            \"variable\": \"hl\",\n            \"value\": \"pt-BR\"\n        },\n        {\n            \"variable\": \"hl\",\n            \"value\": \"pt-BR\"\n        },\n        {\n            \"variable\": \"next_dunning_date\",\n            \"value\": \"2023-02-09\"\n        },\n        {\n            \"variable\": \"payer.email\",\n            \"value\": \"bruwi112406@gmail.com\"\n        },\n        {\n            \"variable\": \"payer.email\",\n            \"value\": \"teste@teste.comm\"\n        },\n        {\n            \"variable\": \"payer.name\",\n            \"value\": \"Bruno Teste\"\n        },\n        {\n            \"variable\": \"payer.name\",\n            \"value\": \"Teste\"\n        }\n    ],\n    \"custom_variables\": [],\n    \"logs\": [\n        {\n            \"id\": \"29276F60D86E4C859AF16F4472E35471\",\n            \"description\": \"Email de Fatura enviado!\",\n            \"notes\": \"Fatura enviada com sucesso para: teste@teste.com\",\n            \"created_at\": \"09/02, 07:42\"\n        },\n        {\n            \"id\": \"5DEA9899EBC04C9B86AEF69E5690DF5B\",\n            \"description\": \"Fatura criada com sucesso!\",\n            \"notes\": \"Fatura criada!\",\n            \"created_at\": \"09/02, 07:42\"\n        }\n    ],\n    \"credit_card_transaction\": null\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "BD0818C4E96441908503AD36ECC5108A"
                    },
                    "due_date": {
                      "type": "string",
                      "example": "2023-02-09"
                    },
                    "currency": {
                      "type": "string",
                      "example": "BRL"
                    },
                    "discount_cents": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "email": {
                      "type": "string",
                      "example": "teste"
                    },
                    "items_total_cents": {
                      "type": "integer",
                      "example": 11000,
                      "default": 0
                    },
                    "notification_url": {},
                    "return_url": {},
                    "status": {
                      "type": "string",
                      "example": "externally_paid"
                    },
                    "tax_cents": {},
                    "total_cents": {
                      "type": "integer",
                      "example": 11000,
                      "default": 0
                    },
                    "total_paid_cents": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "taxes_paid_cents": {},
                    "paid_at": {},
                    "paid_cents": {},
                    "cc_emails": {
                      "type": "string",
                      "example": ""
                    },
                    "financial_return_date": {},
                    "payable_with": {
                      "type": "string",
                      "example": "credit_card"
                    },
                    "overpaid_cents": {},
                    "ignore_due_email": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "ignore_canceled_email": {},
                    "advance_fee_cents": {},
                    "commission_cents": {},
                    "early_payment_discount": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "order_id": {},
                    "updated_at": {
                      "type": "string",
                      "example": "2023-02-09T08:21:32-03:00"
                    },
                    "credit_card_brand": {},
                    "credit_card_bin": {},
                    "credit_card_last_4": {},
                    "credit_card_captured_at": {},
                    "credit_card_tid": {},
                    "external_reference": {
                      "type": "string",
                      "example": ""
                    },
                    "max_installments_value": {},
                    "payer_name": {
                      "type": "string",
                      "example": "Bruno Teste"
                    },
                    "payer_email": {
                      "type": "string",
                      "example": "bruwi112406@gmail.com"
                    },
                    "payer_cpf_cnpj": {},
                    "payer_phone": {},
                    "payer_phone_prefix": {},
                    "payer_address_zip_code": {},
                    "payer_address_street": {},
                    "payer_address_district": {},
                    "payer_address_city": {},
                    "payer_address_state": {},
                    "payer_address_number": {},
                    "payer_address_complement": {},
                    "payer_address_country": {},
                    "late_payment_fine": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "late_payment_fine_cents": {},
                    "split_id": {},
                    "external_payment_id": {
                      "type": "string",
                      "example": "id_externo"
                    },
                    "external_payment_description": {
                      "type": "string",
                      "example": "description"
                    },
                    "account_id": {
                      "type": "string",
                      "example": "B03D07618B73411C99FF73AD12268C10"
                    },
                    "account_name": {
                      "type": "string",
                      "example": "TestA"
                    },
                    "secure_id": {
                      "type": "string",
                      "example": "bd0818c4-e964-4190-8503-ad36ecc5108a-c761"
                    },
                    "secure_url": {
                      "type": "string",
                      "example": "https://faturas.iugu.com/bd0818c4-e964-4190-8503-ad36ecc5108a-c761"
                    },
                    "customer_id": {
                      "type": "string",
                      "example": "A5DD63FE0C254CA294BD30A455C2858A"
                    },
                    "customer_ref": {
                      "type": "string",
                      "example": "Bruno Teste"
                    },
                    "customer_name": {
                      "type": "string",
                      "example": "Bruno Teste"
                    },
                    "user_id": {
                      "type": "string",
                      "example": "0DF9EF1DB2204ECB9E0DB2E42459ABC5"
                    },
                    "total": {
                      "type": "string",
                      "example": "R$ 110,00"
                    },
                    "taxes_paid": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "total_paid": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "total_overpaid": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "total_refunded": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "commission": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "fines_on_occurrence_day": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "total_on_occurrence_day": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "fines_on_occurrence_day_cents": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "total_on_occurrence_day_cents": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "refunded_cents": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "remaining_captured_cents": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "advance_fee": {},
                    "estimated_advance_fee": {},
                    "paid": {
                      "type": "string",
                      "example": "R$ 0,00"
                    },
                    "original_payment_id": {},
                    "double_payment_id": {},
                    "per_day_interest": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "per_day_interest_value": {
                      "type": "integer",
                      "example": 0,
                      "default": 0
                    },
                    "interest": {},
                    "discount": {},
                    "duplicated_invoice_id": {},
                    "created_at": {
                      "type": "string",
                      "example": "09/02, 07:42"
                    },
                    "created_at_iso": {
                      "type": "string",
                      "example": "2023-02-09T07:42:19-03:00"
                    },
                    "authorized_at": {},
                    "authorized_at_iso": {},
                    "expired_at": {},
                    "expired_at_iso": {},
                    "refunded_at": {},
                    "refunded_at_iso": {},
                    "canceled_at": {},
                    "canceled_at_iso": {},
                    "protested_at": {},
                    "protested_at_iso": {},
                    "chargeback_at": {},
                    "chargeback_at_iso": {},
                    "occurrence_date": {},
                    "refundable": {},
                    "installments": {},
                    "transaction_number": {},
                    "payment_method": {},
                    "financial_return_dates": {},
                    "bank_slip": {},
                    "pix": {
                      "type": "object",
                      "properties": {
                        "qrcode": {},
                        "qrcode_text": {},
                        "status": {},
                        "payer_cpf_cnpj": {},
                        "payer_name": {},
                        "end_to_end_id": {},
                        "end_to_end_refund_id": {}
                      }
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "83ED4D2A93E447DD96D2ADCD908C0C10"
                          },
                          "description": {
                            "type": "string",
                            "example": "teste"
                          },
                          "price_cents": {
                            "type": "integer",
                            "example": 1000,
                            "default": 0
                          },
                          "quantity": {
                            "type": "integer",
                            "example": 11,
                            "default": 0
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2023-02-09T07:42:19-03:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2023-02-09T07:42:19-03:00"
                          },
                          "price": {
                            "type": "string",
                            "example": "R$ 10,00"
                          }
                        }
                      }
                    },
                    "early_payment_discounts": {
                      "type": "array"
                    },
                    "split_rules": {},
                    "variables": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "variable": {
                            "type": "string",
                            "example": "hl"
                          },
                          "value": {
                            "type": "string",
                            "example": "pt-BR"
                          }
                        }
                      }
                    },
                    "custom_variables": {
                      "type": "array"
                    },
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "29276F60D86E4C859AF16F4472E35471"
                          },
                          "description": {
                            "type": "string",
                            "example": "Email de Fatura enviado!"
                          },
                          "notes": {
                            "type": "string",
                            "example": "Fatura enviada com sucesso para: teste@teste.com"
                          },
                          "created_at": {
                            "type": "string",
                            "example": "09/02, 07:42"
                          }
                        }
                      }
                    },
                    "credit_card_transaction": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": \"Apenas Faturas pendentes podem ser pagas externamente\"\n}"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "string",
                          "example": "Invoice Not Found"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "object",
                          "properties": {
                            "external_payment_id": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "can't be blank"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "string",
                          "example": "Apenas Faturas pendentes podem ser pagas externamente"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "x-readme": {
    "headers": []
  },
  "x-readme-fauxas": true
}